[名前]
- jada


[バージョン]
- 0.1.3-parallel


[概要]
-JavaによるDoubleArray Trieの実装
-静的構築
-ファイルへの保存/ファイルからの読み込みが可能
-キーとID値の対応を保持するマップ
　--ID値は、各キーに対して0以上キー数未満の値が自動的に付与される

- ブランチ: parallel
　-- 構築部(buildImplメソッド)の並列化試作
　-- 成果:
　　--- 基本的には効果があり、マルチコアマシンでは速くなっている模様
　　--- ただ、並列化したことで割り当てノードの選択順が変わるので、入力キーセットによっては返って遅くなることがある
　　　---- ex. 並列化したことで子ノードが少ないノードが先に選択されやすくなり、
　　　　　　　 最後の方に子ノード数が多いノードが溜まることになるケースがある
　　　　　　　 => そうなると空きノードの探索コストが増えるので、結局総処理時間は長くなる(かつ無駄な不使用ノードも増える)

[ビルド方法]
- jarファイル
　$ ant

- javadoc
　$ ant javadoc


[コマンド使用例]
# トライ構築
$ java -cp jada-0.1.3.jar net.reduls.jada.bin.Build trie.idx < ソート済みキーセットファイル

# トライ検索
$ java -cp jada-0.1.3.jar net.reduls.jada.bin.Search trie.idx < キーリストファイル

# common-prefix-search
$ java -cp jada-0.1.3.jar net.reduls.jada.bin.CommonPrefixSearch trie.idx < キーリストファイル

※ ファイルはいずれも 'キー文字列[改行]*' 形式


[Java API]
- TODO
- 現状(2010/08/29)はjavadocを参照のこと


[プロジェクトページ]
- http://github.com/sile/jada


[バグ報告等]
- phjgt308@gmail.com
- http://github.com/sile/jada/issues
